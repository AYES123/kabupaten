
%style
  :sass
    #filter_options
      table
        td
          padding: 10px

- if @kabupaten
  - @page_title = "#{t('kabupaten.project_list')} #{t('general.in')} #{@kabupaten.category_name}"
- else
  - @page_title = t('kabupaten.project_list')

- @body_class = "projects"

#filter
  - if @filter
    %p Filtered for:
  = form_tag projects_path, method: :get do

    #filter_options
      %table
        %thead
          %tr
            %th= t('kabupaten.sector').titleize
            %th= t('kabupaten.contains')
            %th= t('kabupaten.location').titleize
            %th
        %tbody
          %tr
            %td
            %td
              = text_field_tag 'filter[search]', "#{@filter[:search] if @filter}", class: 'enable_submit'
            %td
              = hidden_field_tag 'filter[kabupaten_id]', "#{@filter[:kabupaten_id] if @filter}"
              = autocomplete_field_tag :kabupaten_name, '', autocomplete_kabupaten_name_kabupatens_path, class: 'enable_submit', id_element: "#filter_kabupaten_id", value: "#{@kabupaten.try(:name)}"
            %td{style: 'vertical-align: top'}
              %input{:type => 'submit', :value => 'Filter', class: 'enable_on_input btn', disabled: @filter.blank?}

- if @projects.present?

  %p= page_entries_info @projects

  %table.table.table-striped
    %tr
      %th{style: 'width:20%'}= t('kabupaten.title').titleize
      %th= t('kabupaten.description').titleize
      %th{style: 'width:15%'}= t('kabupaten.location').titleize
      %th{style: 'width:15%'}= t('kabupaten.sector').titleize

    - @projects.each do |project|
      %tr
        %td
          = link_to project.name, project
        %td
          = strip_tags(project.description).try(:truncate, 300)
        %td
          = raw(project.kabupatens.map{|k| link_to k.category_name, kabupaten_path(k.id)}.join(', '))
        %td= project.sectors.map(&:name).sort.join(', ')

  = will_paginate @projects

-else
  %p There are no projects to list
%br

= link_to 'Submit a Project', new_project_path, :class => 'btn btn-primary'
